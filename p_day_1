读入一个正整数 n，计算其各位数字之和，用汉语拼音写出和的每一位数字。

输入格式：
每个测试输入包含 1 个测试用例，即给出自然数 n 的值。这里保证 n 小于 10
​100
​​ 。

输出格式：
在一行内输出 n 的各位数字之和的每一位，拼音数字间有 1 空格，但一行中最后一个拼音数字后没有空格。

输入样例：
1234567890987654321123456789
输出样例：
yi san wu

#!/usr/bin/env python
#coding:utf-8



def deal_inputnum(num):
    sum_num = sum([ int(i) for i in str(num) ])

    num_pin = {1:"yi",
               2:"er",
               3:"san",
               4:"si",
               5:"wu",
               6:"liu",
               7:"qi",
               8:"ba",
               9:"jiu",
               0:"ling"}
    l = ""
    for j in str(sum_num):
        l += num_pin[int(j)] + " "
    return l

num = 1234567890987654321123456789
deal_inputnum(num)

###########################################################################

给定一个 k 位整数 N=d
​k−1
​​ 10
​k−1
​​ +⋯+d
​1
​​ 10
​1
​​ +d
​0
​​  (0≤d
​i
​​ ≤9, i=0,⋯,k−1, d
​k−1
​​ >0)，请编写程序统计每种不同的个位数字出现的次数。例如：给定 N=100311，则有 2 个 0，3 个 1，和 1 个 3。

输入格式：
每个输入包含 1 个测试用例，即一个不超过 1000 位的正整数 N。

输出格式：
对 N 中每一种不同的个位数字，以 D:M 的格式在一行中输出该位数字 D 及其在 N 中出现的次数 M。要求按 D 的升序输出。

输入样例：
100311
输出样例：
0:2
1:3
3:1


def count_num(num):
    l_num = [ int(i) for i in str(num) ]
    l_set = set(l_num)
    dic = {}
    for j in l_set:
        dic[str(num).count(str(j))] = j
    for k,v in dic.items():
        print v,":",k
        
num = 100311
count_num(num)


